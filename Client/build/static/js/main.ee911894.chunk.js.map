{"version":3,"sources":["store/actions/post.js","store/actions/types.js","components/Spinner.js","components/helper.js","components/pages/post/posts.js","components/pages/Home.js","components/pages/user/Signup.js","store/actions/user.js","components/pages/user/Signin.js","components/menu.js","components/Modal.js","components/pages/user/followProfileButton.js","components/pages/user/ProfileTabs.js","components/pages/user/Profile.js","components/pages/user/Users.js","components/pages/user/EditProfile.js","components/PrivateRoute.js","components/pages/user/FindUser.js","components/pages/post/Editor.js","components/pages/post/createPost.js","components/pages/post/commentRender.js","components/pages/post/Comment.js","components/pages/post/SinglePost.js","MainRouter.js","App.js","store/actions/socketAction.js","serviceWorker.js","store/reducers/user.js","store/reducers/post.js","store/reducers/socketReducer.js","store/reducers/index.js","index.js"],"names":["singlePost","postId","cb","dispatch","a","axios","get","res","type","payload","data","console","log","deletePost","_id","token","delete","headers","Authorization","unComment","commentId","put","Spinner","className","width","height","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy","r","getRandomColor","color","i","Math","floor","random","connect","state","posts","post","getAllPost","socket","emit","useState","err","setErr","loading","setLoading","search","setSearch","useEffect","imgError","evt","target","style","backgroundColor","filterPost","filter","c","regex","RegExp","title","match","body","placeholder","onChange","value","name","map","key","src","onError","alt","dangerouslySetInnerHTML","__html","substring","to","postedBy","Date","createdAt","toDateString","cursor","likes","length","aria-hidden","Home","signup","user","Axios","localStorage","setItem","status","Boolean","response","error","props","email","password","values","setValues","errors","setErrors","handleChange","newerrors","Object","keys","role","data-dismiss","aria-label","onSubmit","preventDefault","history","push","autoFocus","disabled","class","signin","remember","defaultChecked","onClick","checked","id","for","isAuthenticated","auth","logout","withRouter","overflow","href","data-toggle","data-target","aria-controls","aria-expanded","location","pathname","renderPrivateNav","borderRadius","aria-haspopup","removeItem","Modal","deleteHandler","text","modelId","tabIndex","aria-labelledby","userfollow","followid","unFollow","unfollowid","followingList","followingId","extraclass","checkFollowing","setCheckFollowing","find","follow","jwt","ProfileTabs","follower","following","person","border","getTime","users","userList","userProfile","postbyUserList","postbyUser","totalLikes","totalComments","likesreceive","commentsreceive","singleUser","deleteProfile","userId","postByUser","likesAndcomments","likesReceive","setId","params","objectFit","about","allUser","setDt","on","some","userData","FormData","editProfile","show","setShow","set","setTimeout","accept","files","size","Component","component","rest","render","findPeople","authuser","MyComponent","setState","Editor","modules","toolbar","clipboard","matchVisual","formats","this","theme","React","postData","createPost","updatePost","updatedpost","photo","Comment","prevProps","comment","commentedBy","lineHeight","moment","calendar","deleteComment","commentRef","createRef","submitHandler","current","prevprops","comments","newComments","_","sortBy","o","reverse","ref","SinglePost","isLike","SockerHandler","postUpdate","likeToggle","likeUnlike","like","format","MainRouter","exact","path","Users","SignUp","Signin","Profile","EditProfile","FindPeople","CreatePost","require","config","logedIn","notLogedIn","connectSocket","io","window","hostname","initialState","commentsReceive","userReducer","action","comments_receive","likes_receive","likes_post","comments_post","postReducer","Socket","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ee911894.chunk.js","sourcesContent":["import { GETALLPOST, SINGLEPOST, POSTBY_USER, LIKE_UNLIKE, COMMENT, UNCOMMENT } from './types'\r\nimport axios from 'axios'\r\n\r\nexport const createPost = (post, token, cb) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            await axios.post(`/api/post/createpost`, post, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            })\r\n            // dispatch({ type: \"\", payload: res.data })\r\n            cb()\r\n        } catch (err) {\r\n            console.log(err);\r\n            cb(\"Post not created\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const singlePost = (postId, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.get(`/api/post/single/${postId}`)\r\n            dispatch({ type: SINGLEPOST, payload: res.data })\r\n            cb(null, res.data)\r\n        } catch (err) {\r\n            console.log(err);\r\n            cb(\"Post not fetched\")\r\n        }\r\n    }\r\n}\r\nexport const getAllPost = (cb) => {\r\n    return async (dispatch, state) => {\r\n        try {\r\n            const res = await axios.get(`/api/post/getAllpost`)\r\n\r\n            console.log(state().socket.emit(\"one\", { data: \"one\" }));\r\n            dispatch({ type: GETALLPOST, payload: res.data })\r\n\r\n            cb()\r\n        } catch (err) {\r\n            console.log(err);\r\n            cb(\"Posts not fetched\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const postByUser = (_id, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.get(`/api/post/by/${_id}`)\r\n            dispatch({ type: POSTBY_USER, payload: res.data });\r\n            cb();\r\n        } catch (error) {\r\n            console.log(error);\r\n            cb(\"user post not fetched\")\r\n        }\r\n    }\r\n}\r\nexport const deletePost = async (_id, token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            await axios.delete(`/api/post/${_id}`, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            })\r\n            cb()\r\n        } catch (error) {\r\n            cb(\"post not deleted\")\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const updatePost = (updatedpost, token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            await axios.put(`/api/post/${updatedpost._id}`, updatedpost, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            })\r\n            cb()\r\n        } catch (error) {\r\n            cb(\"post not updated\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const likeUnlike = (postId, token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.put(`/api/post/like/${postId}`, {}, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            });\r\n            dispatch({ type: LIKE_UNLIKE, payload: res.data });\r\n            cb();\r\n        } catch (error) {\r\n            cb(\"likes not updated\");\r\n        }\r\n    }\r\n}\r\nexport const postUpdate = (post) => {\r\n    return {\r\n        type: LIKE_UNLIKE,\r\n        payload: post\r\n    }\r\n}\r\n\r\nexport const comment = (postId, comment, token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.put(`/api/post/comment/${postId}`, { comment: comment.text }, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            });\r\n            dispatch({ type: COMMENT, payload: res.data })\r\n            cb();\r\n        } catch (error) {\r\n            cb(\"comment not posted\");\r\n        }\r\n    }\r\n}\r\n\r\nexport const unComment = (postId, commentId, token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.put(`/api/post/uncomment/${postId}/${commentId}`, {}, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            });\r\n            console.log(res.data);\r\n            dispatch({ type: UNCOMMENT, payload: res.data })\r\n            cb();\r\n        } catch (error) {\r\n            console.log(\"error=>>>>>>\", error)\r\n            cb(\"comment not deleted\");\r\n        }\r\n    }\r\n}","\r\nexport const SIGNIN = \"SIGNIN\";\r\nexport const SIGNUP = \"SIGNUP\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\"\r\nexport const ALL_USER = \"ALL_USER\"\r\nexport const SINGLE_USER = \"SINGLE_USER\"\r\nexport const DELETE_PROFILE = \"DELETE_PROFILE\";\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\r\nexport const NOT_LOGED_IN = \"NOT_LOGED_IN\";\r\nexport const FOLLOW = \"FOLLOW\";\r\nexport const UNFOLLOW = \"UNFOLLOW\";\r\nexport const FINDPEOPLE = \"FINDPEOPLE\";\r\nexport const GETALLPOST = \"GETALLPOST\";\r\nexport const SINGLEPOST = \"SINGLEPOST\";\r\n\r\n\r\n\r\nexport const POSTBY_USER = \"POSTBY_USER\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\n\r\nexport const FETCH_DATA = \"FETCH_DATA\";\r\n\r\nexport const LIKE_UNLIKE = \"LIKE_UNLIKE\";\r\nexport const COMMENT = \"COMMENT\";\r\nexport const UNCOMMENT = \"UNCOMMENT\";\r\nexport const LIKESANDCOMMENTS = \"LIKESANDCOMMENTS\";\r\nexport const LIKERECEIVE = \"LIKERECEIVE\";\r\n\r\n\r\n\r\nexport const SOCKETCONNECTED = \"SOCKETCONNECTED\"; \r\nexport const DISSOCKETCONNECTED = \"DISSOCKETCONNECTED\"; ","import React from 'react';\r\nimport \"./Spinner.css\"\r\nconst Spinner = () => {\r\n    return (\r\n        <svg className=\"spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <circle className=\"path\" fill=\"none\" strokeWidth=\"6\" strokeLinecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default Spinner;","export const getRandomColor = () => {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAllPost } from '../../../store/actions/post';\r\nimport Spinner from '../../Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRandomColor } from '../../helper';\r\nimport \"./post.css\";\r\nconst GetAllPost = ({ posts, getAllPost }) => {\r\n    const [err, setErr] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [search, setSearch] = useState(\"\");\r\n    useEffect(() => {\r\n        getAllPost((err) => {\r\n            if (err) {\r\n                setLoading(false)\r\n                setErr(err);\r\n            } else {\r\n                setLoading(false)\r\n            }\r\n        })\r\n    }, [getAllPost])\r\n\r\n    const changeHandler = (evt) => {\r\n        setSearch(evt.target.value)\r\n    }\r\n    const imgError = async (evt) => {\r\n        evt.target.style.backgroundColor = getRandomColor()\r\n        evt.target.className += \" postImgErr\";\r\n        console.log(evt.target.className)\r\n    }\r\n    const filterPost = posts ? posts.filter(c => {\r\n        const regex = new RegExp(`${search}`, \"gi\");\r\n        return c.title.match(regex) || c.body.match(regex);\r\n    }) : []\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"d-flex justify-content-center mt-5\">\r\n                <div className=\"form-group w-75\">\r\n                    <input placeholder=\"search from posts\" onChange={changeHandler} value={search} name=\"search\" className=\"form-control\" />\r\n                </div>\r\n            </div>\r\n            <h2 className=\"my-5 text-center\">\r\n                Recent Posts\r\n            </h2>\r\n            {err && <div className=\"alert alert-warning\">{err}</div>}\r\n            {posts && (\r\n                <div className=\"row justify-content-center\">\r\n                    {filterPost.map(post => {\r\n                        return (\r\n                            <div className=\"col-md-4 card m-1 p-1 singlePost\" style={{ width: \"18rem\" }} key={`Users ${post._id}`}>\r\n                                <img className=\"card-image-top\"\r\n                                    src={`/api/post/photo/${post._id}`}\r\n                                    onError={imgError}\r\n                                    alt={`${post.name}'s Image`} />\r\n                                <div className=\"card-body p-2\">\r\n                                    <h2 className=\"card-title\">{post.title}</h2>\r\n                                    <div className=\"card-text\" dangerouslySetInnerHTML={{ __html: post.body.substring(0, 100) }} />\r\n                                    <hr />\r\n                                    <p className=\"font-italic \">\r\n                                        Posted By\r\n                                        <Link to={`/user/${post.postedBy._id}`}>\r\n                                            <span className=\"mark\">\r\n                                                {post.postedBy.name}\r\n                                            </span>\r\n                                        </Link>\r\n                                        <br />\r\n                                        on {new Date(post.createdAt).toDateString()}\r\n                                    </p>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <Link to={`/posts/${post._id}`} className=\"btn btn-raised btn-sm btn-primary\">Read more</Link>\r\n                                        <h6 style={{ cursor: \"pointer\" }} className=\"d-inline-block\"  >\r\n                                            {post.likes.length}{\" \"}\r\n                                            <i className=\"fa fa-thumbs-o-up ml-1 \" aria-hidden=\"true\"></i>\r\n                                            {\" \"}\r\n                                            {post.likes.length}\r\n                                            <i className=\"fa fa-comments-o ml-1\" aria-hidden=\"true\"></i>\r\n                                        </h6>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )}\r\n            {loading && <Spinner />}\r\n\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.post.posts\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { getAllPost })(GetAllPost);","import React from 'react';\r\nimport Posts from \"./post/posts\";\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <Posts />\r\n        </>\r\n    )\r\n}\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { signup } from '../../../store/actions/user';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SignUp = (props) => {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [errors, setErrors] = useState({})\r\n    const { name, email, password } = values;\r\n    const handleChange = (evt) => {\r\n        setValues({ ...values, [evt.target.name]: evt.target.value })\r\n        const newerrors = { ...errors }\r\n        delete newerrors[evt.target.name];\r\n        setErrors({ ...newerrors })\r\n    }\r\n    const submitHandler = (evt) => {\r\n        evt.preventDefault();\r\n        props.signup(values, (err) => {\r\n            setLoading(false)\r\n            if (err) {\r\n                setErrors(err)\r\n            }\r\n            else {\r\n                setValues({\r\n                    email: \"\",\r\n                    password: \"\"\r\n                })\r\n                props.history.push('/')\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"mt-5 mb-5\">\r\n                SignUp Form\r\n                </h2>\r\n            {Object.keys(errors).length > 0 && (\r\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                    <ul>\r\n                        {Object.keys(errors).map(err => {\r\n                            if (errors[err]) {\r\n                                return (\r\n                                    <li key={`signin ${err}`}>\r\n                                        {errors[err]}\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            else {\r\n                                return null\r\n                            }\r\n\r\n                        })}\r\n                    </ul>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            <form onSubmit={submitHandler} >\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">\r\n                        Name\r\n                    </label>\r\n                    <input autoFocus type=\"text\" value={name} onChange={handleChange} name=\"name\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">\r\n                        Email\r\n                    </label>\r\n                    <input type=\"email\" value={email} onChange={handleChange} name=\"email\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">\r\n                        Password\r\n                    </label>\r\n                    <input type=\"password\" value={password} onChange={handleChange} name=\"password\" className=\"form-control\" />\r\n                </div>\r\n                <button className={`btn btn-raised btn-primary`} disabled={loading} >{loading ? \"Loading\" : \"Signup\"} </button>\r\n            </form>\r\n            <div class=\"alert alert-dark\" role=\"alert\">\r\n                Already have an account <Link to=\"/signin\">Signin</Link> instead.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, { signup })(SignUp);","import {\r\n    SIGNIN, SIGNUP,\r\n    SET_USER, LOGOUT,\r\n    ALL_USER, SINGLE_USER,\r\n    DELETE_PROFILE, UPDATE_PROFILE,\r\n    AUTH_ERROR, NOT_LOGED_IN,\r\n    FOLLOW,\r\n    UNFOLLOW,\r\n    FINDPEOPLE,\r\n    LIKESANDCOMMENTS,\r\n    LIKERECEIVE,\r\n} from './types'\r\nimport Axios from 'axios';\r\nexport const likesAndcomments = (token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.get(\"/api/user/likesgave\", {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            })\r\n            dispatch({ type: LIKESANDCOMMENTS, payload: res.data })\r\n            cb()\r\n        } catch (error) {\r\n            cb(\"likes and comment not found\");\r\n        }\r\n    }\r\n}\r\nexport const likesReceive = (token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.get(\"/api/user/likesreceive\", {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            });\r\n            dispatch({\r\n                type: LIKERECEIVE,\r\n                payload: res.data\r\n            })\r\n            cb();\r\n        } catch (error) {\r\n            cb({ error: \"Something went Wrong\" })\r\n        }\r\n    }\r\n}\r\nexport const signin = (user, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.post(`/api/auth/signin`, user)\r\n            localStorage.setItem(\"jwt\", `Bearer ${res.data.token}`)\r\n            dispatch({ type: SIGNIN, payload: res.data })\r\n            cb()\r\n        }\r\n        catch (err) {\r\n            const status = Boolean(err.response) ? err.response.status : 0\r\n            if (status === 403 || status === 404) {\r\n                cb(err.response.data)\r\n            }\r\n            else {\r\n                cb({ error: \"Something went Wrong\" })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const signup = (user, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.post(`/api/auth/signup`, user)\r\n            localStorage.setItem(\"jwt\", `Bearer ${res.data.token}`)\r\n            dispatch({ type: SIGNUP, payload: res.data })\r\n            cb()\r\n        }\r\n        catch (err) {\r\n            const status = Boolean(err.response) ? err.response.status : 0\r\n            if (status === 403 || status === 404) {\r\n                cb(err.response.data)\r\n            }\r\n            else {\r\n                cb({ error: \"Something went Wrong\" })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const logedIn = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.get(`/api/auth/logedin`, {\r\n                headers: {\r\n                    \"Authorization\": token\r\n                }\r\n            })\r\n            dispatch({ type: SET_USER, payload: res.data })\r\n        }\r\n        catch (err) {\r\n            localStorage.removeItem('jwt')\r\n            dispatch({ type: AUTH_ERROR })\r\n        }\r\n    }\r\n}\r\n\r\nexport const allUser = (cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.get(`/api/user/alluser`)\r\n            dispatch({ type: ALL_USER, payload: res.data })\r\n            cb()\r\n        } catch (err) {\r\n            console.log(err);\r\n            cb(\"User not fetched\")\r\n        }\r\n    }\r\n}\r\n\r\nexport const findPeople = (token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.get(`/api/user/suggestion`, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            })\r\n            dispatch({ type: FINDPEOPLE, payload: res.data })\r\n            cb()\r\n        } catch (err) {\r\n            console.log(err);\r\n            cb(\"User not fetched\")\r\n        }\r\n    }\r\n}\r\nexport const singleUser = (id, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.get(`/api/user/${id}`)\r\n            dispatch({ type: SINGLE_USER, payload: res.data })\r\n            cb()\r\n        } catch (err) {\r\n            console.log(err);\r\n            cb(\"User not fetched\")\r\n        }\r\n    }\r\n}\r\nexport const logout = (cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            await Axios.get(\"/api/auth/signout\")\r\n            dispatch({ type: LOGOUT })\r\n            cb()\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\nexport const deleteProfile = (userId, token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            await Axios.delete(`/api/user/${userId}`, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            })\r\n            localStorage.removeItem(\"jwt\");\r\n            dispatch({ type: DELETE_PROFILE })\r\n            cb();\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n            cb(\"user not deleted\")\r\n        }\r\n    }\r\n}\r\nexport const editProfile = (id, user, token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.put(`/api/user/${id}`, user, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            });\r\n            dispatch({ type: UPDATE_PROFILE, payload: res.data })\r\n            cb();\r\n        } catch (err) {\r\n            console.log(err);\r\n            cb(\"user not updated\");\r\n        }\r\n    }\r\n}\r\nexport const notLogedIn = () => {\r\n    return {\r\n        type: NOT_LOGED_IN\r\n    }\r\n}\r\n\r\n\r\nexport const userfollow = (followid, token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.put(`/api/user/follow/`, { followid }, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            });\r\n            dispatch({ type: FOLLOW, payload: res.data })\r\n            cb();\r\n        } catch (err) {\r\n            console.log(err);\r\n            cb(\"something went wrong please try again\");\r\n        }\r\n    }\r\n}\r\nexport const unFollow = (unfollowid, token, cb) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await Axios.put(`/api/user/unfollow/`, { unfollowid }, {\r\n                headers: {\r\n                    Authorization: token\r\n                }\r\n            });\r\n            dispatch({ type: UNFOLLOW, payload: res.data })\r\n            cb();\r\n        } catch (err) {\r\n            console.log(err);\r\n            cb(\"something went wrong please try again\");\r\n        }\r\n    }\r\n\r\n}","import React, { useState } from 'react';\r\nimport { signin } from '../../../store/actions/user';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nconst Signin = (props) => {\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        remember: false\r\n    })\r\n    const [loading, setLoading] = useState(false);\r\n    const { email, password,remember } = values;\r\n    const [errors, setErrors] = useState({})\r\n    const handleChange = (evt) => {\r\n        setValues({ ...values, [evt.target.name]: evt.target.value })\r\n        const newerrors = { ...errors }\r\n        delete newerrors[evt.target.name];\r\n        setErrors({ ...newerrors })\r\n    }\r\n    const handleCheckedChange=(evt)=>{\r\n        setValues({...values,[evt.target.name]:evt.target.checked});\r\n    }\r\n    const submitHandler = (evt) => {\r\n        evt.preventDefault();\r\n        setLoading(true)\r\n        props.signin(values, (err) => {\r\n            setLoading(false)\r\n            if (err) {\r\n                setErrors(err)\r\n            }\r\n            else {\r\n                setValues({\r\n                    email: \"\",\r\n                    password: \"\"\r\n                })\r\n                props.history.push('/')\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"mt-5 mb-5\">\r\n                SignIn Form\r\n                </h2>\r\n            {Object.keys(errors).length > 0 && (\r\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                    <ul>\r\n                        {Object.keys(errors).map(err => {\r\n                            if (errors[err]) {\r\n                                return (\r\n                                    <li key={`signin ${err}`}>\r\n                                        {errors[err]}\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            else {\r\n                                return null\r\n                            }\r\n\r\n                        })}\r\n                    </ul>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n\r\n                </div>\r\n            )}\r\n\r\n            <form onSubmit={submitHandler} >\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">\r\n                        Email\r\n                    </label>\r\n                    <input autoFocus type=\"email\" value={email} onChange={handleChange} name=\"email\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">\r\n                        Password\r\n                    </label>\r\n                    <input type=\"password\" value={password} onChange={handleChange} name=\"password\" className=\"form-control\" />\r\n                </div>\r\n                <div class=\"form-check my-3\">\r\n                    <input name=\"remember\" value={remember} defaultChecked={remember} type=\"checkbox\" onClick={handleCheckedChange} class=\"form-check-input\" id=\"exampleCheck1\" />\r\n                    <label class=\"form-check-label\" for=\"exampleCheck1\">Remember me</label>\r\n                </div>\r\n                <button className={`btn btn-raised btn-primary`} disabled={loading} >{loading ? \"Loading\" : \"Login\"} </button>\r\n\r\n            </form>\r\n            <div className=\"alert alert-dark\" role=\"alert\">\r\n                Not have an account <Link to=\"/signup\">Signup</Link> instead.\r\n                    </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null, { signin })(Signin);","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { logout } from '../store/actions/user';\r\nimport { connect } from 'react-redux';\r\nimport { getRandomColor } from './helper';\r\nconst Menu = ({ history, logout, isAuthenticated, user },) => {\r\n    const signOut = () => {\r\n        logout(() => {\r\n            localStorage.removeItem('jwt');\r\n            history.push('/signin');\r\n        })\r\n    }\r\n    const renderPrivateNav = () => {\r\n        switch (isAuthenticated) {\r\n            case false:\r\n                return (\r\n                    <>\r\n                        <li className={`nav-item ${history.location.pathname === \"/signup\" && \"active\"}`}>\r\n                            <Link className=\"nav-link\" to=\"/signup\">SignUp</Link>\r\n                        </li>\r\n\r\n                        <li className={`nav-item ${history.location.pathname === \"/signin\" && \"active\"}`}>\r\n                            <Link className=\"nav-link\" to=\"/signin\">SignIn</Link>\r\n                        </li>\r\n\r\n                    </>\r\n                )\r\n            case true:\r\n                return\r\n            default:\r\n                return\r\n        }\r\n    }\r\n    const imgError = async (evt) => {\r\n        // evt.target.src = \"https://source.unsplash.com/random\";\r\n        evt.target.style.backgroundColor = getRandomColor()\r\n        evt.target.style.overflow = \"hidden\"\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n            <div className=\"container\">\r\n            \r\n            <a className=\"navbar-brand\" href=\"/\">Social Network</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className={`nav-item ${history.location.pathname === \"/\" && \"active\"}`}>\r\n                        <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                    </li>\r\n                    <li className={`nav-item ${history.location.pathname === \"/users\" && \"active\"}`}>\r\n                        <Link className=\"nav-link\" to=\"/users\">Users <span className=\"sr-only\">(current)</span></Link>\r\n                    </li>\r\n                    {renderPrivateNav()}\r\n                    {isAuthenticated && (\r\n                        <>\r\n                            <li className={`nav-item ${history.location.pathname === \"/findpeople\" && \"active\"}`}>\r\n                                <Link className=\"nav-link\" to=\"/findpeople\">Find People</Link>\r\n                            </li>\r\n                            <li className={`nav-item ${history.location.pathname === \"/post/create\" && \"active\"}`}>\r\n                                <Link className=\"nav-link\" to=\"/post/create\">Create Post</Link>\r\n                            </li>\r\n                        </>\r\n                    )}\r\n                </ul>\r\n                {isAuthenticated && <ul className=\"navbar-nav  mt-2 mt-lg-0 justify-content-end\">\r\n                    <li className=\"nav-item dropdown\">\r\n                        <img\r\n                            src={`/api/user/photo/${user._id}`}\r\n                            onError={imgError}\r\n                            className=\"float-left mr-2\"\r\n                            height=\"35px\"\r\n                            width=\"35px\"\r\n\r\n                            style={{\r\n                                borderRadius: \"50%\",\r\n                            }}\r\n                        />\r\n                        <a href={`/user/${user._id}`} type=\"button\" className=\"btn text-light\">{user.name}</a>\r\n                        <button type=\"button\" className=\"btn dropdown-toggle dropdown-toggle-split text-light\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            {/* <span class=\"sr-only\">Toggle Dropdown</span> */}\r\n                        </button>\r\n                        <div className=\"dropdown-menu dropdown-menu-right   \">\r\n                            <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                            <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                            <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                            <div className=\"dropdown-divider\"></div>\r\n                            <a className=\"dropdown-item\" href=\"#\" onClick={signOut}>Signout</a>\r\n\r\n                        </div>\r\n                    </li>\r\n                </ul>}\r\n            </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        user: state.auth.user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { logout })(withRouter(Menu));","import React from 'react';\r\nconst Modal = ({ deleteHandler,text,modelId }) => {\r\n    return (\r\n        <div className=\"modal fade\" id={modelId} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"mymodal\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Delete {text}</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        Are your sure you want to delete {text}?\r\n                     </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={deleteHandler}>Delete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { userfollow, unFollow } from \"../../../store/actions/user\"\r\n\r\n\r\nconst ProfileFollowButton = ({ followingList, followingId, userfollow,unFollow,extraclass }) => {\r\n    const [checkFollowing, setCheckFollowing] = useState(false);\r\n    useEffect(() => {\r\n        setCheckFollowing(followingList ? followingList.find(follow => follow._id === followingId) : false)\r\n        console.log(\"follow\")\r\n    }, [followingList, followingId])\r\n\r\n    return (\r\n\r\n        <div className=\"d-inline-block\">\r\n            {!checkFollowing ? (\r\n                <button className={`btn btn-success btn-raised ${extraclass}`} onClick={() => {\r\n                    userfollow(followingId, localStorage.jwt, (err) => {\r\n                        if (!err) {\r\n                            setCheckFollowing(!checkFollowing);\r\n                        }\r\n                    })\r\n                }}>\r\n                    Follow\r\n                </button>\r\n            ) :\r\n\r\n                (<button className={`btn btn-warning btn-raised ${extraclass}`}\r\n                onClick={() => {\r\n                    unFollow(followingId, localStorage.jwt, (err) => {\r\n                        if (!err) {\r\n                            setCheckFollowing(!checkFollowing);\r\n                        }\r\n                    })\r\n                }}\r\n                >\r\n                    UnFollow\r\n                </button>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default connect(null, { userfollow,unFollow })(ProfileFollowButton);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRandomColor } from '../../helper';\r\n\r\nconst ProfileTabs = ({ follower, following, posts }) => {\r\n    const imgError = async (evt) => {\r\n        // evt.target.src = \"https://source.unsplash.com/random\";\r\n        evt.target.style.backgroundColor = getRandomColor()\r\n        evt.target.style.overflow=\"hidden\"\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <h3 className=\"text-primary\">Followers ({follower.length})</h3>\r\n                    <hr />\r\n                    {follower.map(person => (\r\n                        <div key={`tabfollowing${person._id}`}>\r\n                            <div className=\"row  mt-2 p-2\">\r\n                                <div>\r\n                                    <Link to={`/user/${person._id}`}>\r\n                                        <img\r\n                                            className=\"float-left mr-2\"\r\n                                            height=\"40px\"\r\n                                            width=\"40px\"\r\n\r\n                                            style={{\r\n                                                borderRadius: \"50%\",\r\n                                                border: \".8px solid #707070\"\r\n                                            }}\r\n                                            src={`/api/user/photo/${person._id}?${new Date().getTime()}`}\r\n                                            alt={`${person.name}`}\r\n                                            onError={imgError}\r\n                                        />\r\n                                        <div className=\"float-left\">\r\n                                            <h3>{person.name}</h3>\r\n                                        </div>\r\n\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <h3 className=\"text-primary\">Following ({following.length})</h3>\r\n                    <hr />\r\n                    {following.map(person => (\r\n                        <div key={`tabfollower${person._id}`}>\r\n                            <div className=\"row  mt-2 p-2\">\r\n                                <div className=\"\">\r\n                                    <Link to={`/user/${person._id}`}>\r\n                                        <img\r\n                                            className=\"float-left mr-2\"\r\n                                            height=\"40px\"\r\n                                            width=\"40px\"\r\n\r\n                                            style={{\r\n                                                borderRadius: \"50%\",\r\n                                                border: \".8px solid #707070\"\r\n                                            }}\r\n                                            src={`/api/user/photo/${person._id}?${new Date().getTime()}`}\r\n                                            alt={`${person.name}`}\r\n                                            onError={imgError}\r\n                                        />\r\n                                        <div className=\"float-left\">\r\n                                            <h3>{person.name}</h3>\r\n                                        </div>\r\n\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <h3 className=\"text-primary\">Post ({posts.length})</h3>\r\n                    <hr />\r\n\r\n                    {posts.map(post => (\r\n                        <div key={`tabfollower${post._id}`}>\r\n                            <div className=\"row  mt-2 p-2\">\r\n                                <div className=\"\">\r\n                                    <Link to={`/posts/${post._id}`}>\r\n                                        <img\r\n                                            className=\"float-left mr-2\"\r\n                                            height=\"40px\"\r\n                                            width=\"40px\"\r\n\r\n                                            style={{\r\n                                                borderRadius: \"50%\",\r\n                                                border: \".8px solid #707070\"\r\n                                            }}\r\n                                            src={`/api/post/photo/${post._id}?${new Date().getTime()}`}\r\n                                            alt={`${post.name}`}\r\n                                            onError={imgError}\r\n                                        />\r\n                                        <div className=\"float-left\">\r\n                                            <h3>{post.title}</h3>\r\n                                        </div>\r\n\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileTabs;","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { singleUser, deleteProfile, likesAndcomments, likesReceive } from '../../../store/actions/user';\r\nimport { postByUser } from '../../../store/actions/post';\r\nimport Modal from '../../Modal';\r\nimport ProfileFollowButton from './followProfileButton';\r\nimport ProfileTabs from './ProfileTabs';\r\nimport { getRandomColor } from '../../helper';\r\n\r\nconst Profile = ({ match, user, isAuthenticated, singleUser, totalComments, totalLikes, commentsreceive, likesreceive, userProfile, deleteProfile, history, postByUser, postbyUserList, likesAndcomments, likesReceive }) => {\r\n    const [id, setId] = useState(null);\r\n    const [err, setErr] = useState(null);\r\n    useEffect(() => {\r\n        if (!id) {\r\n            setId(match.params.userId)\r\n            postByUser(match.params.userId, (err) => {\r\n                setErr(err);\r\n            })\r\n\r\n            singleUser(match.params.userId, (err) => {\r\n                if (err) {\r\n                    setErr(err)\r\n                }\r\n            })\r\n        }\r\n        if (isAuthenticated) {\r\n            likesAndcomments(localStorage.jwt, () => {\r\n            });\r\n            likesReceive(localStorage.jwt, () => {\r\n\r\n            });\r\n        }\r\n\r\n    }, [id,isAuthenticated, singleUser, postByUser ])\r\n\r\n\r\n    const imgError = async (evt) => {\r\n        // evt.target.src = \"https://source.unsplash.com/random\";\r\n        evt.target.style.backgroundColor = getRandomColor()\r\n        evt.target.style.overflow = \"hidden\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid px-5\">\r\n            <h2 className=\"mt-5 mb-5\">Profile</h2>\r\n            {err && (\r\n                <div className=\"alert alert-danger\">{err}</div>\r\n            )}\r\n            {userProfile && (\r\n                <>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n\r\n                            <img className=\"card-image-top\" style={{\r\n                                width: \"100%\",\r\n                                height: \"20vw\",\r\n                                objectFit: \"contain\"\r\n                            }} src={`/api/user/photo/${userProfile._id}?${new Date().getTime()}`} onError={imgError} alt={`${userProfile.name}'s Image`} />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-md-8\">\r\n                            {/* {isAuthenticated && } */}\r\n                            <div className=\"lead mt-2\">\r\n\r\n                                <p>hello: {userProfile.name}</p>\r\n                                <p>Email: {userProfile.email}</p>\r\n                                <p>joined on:{new Date(userProfile.createdAt).toDateString()} </p>\r\n                            </div>\r\n                            <hr />\r\n                            {isAuthenticated &&\r\n                                <>\r\n                                    <div className=\"d-flex my-3\">\r\n                                        <h5 className=\"mr-3\">Likes Receive <span class=\"badge badge-primary\">{likesreceive}</span></h5>\r\n                                        <h5 className=\"\">Coments Receive <span class=\"badge badge-primary\">{commentsreceive}</span></h5>\r\n                                    </div>\r\n                                    <div className=\"d-flex my-3\">\r\n                                        <h5 className=\"mr-3\">Likes post <span class=\"badge badge-secondary\">{totalLikes}</span></h5>\r\n                                        <h5 className=\"\">coments post <span class=\"badge badge-secondary\">{totalComments}</span></h5>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n\r\n                            {isAuthenticated && (user._id === id) ? (\r\n                                <div className=\"d-inline-block\">\r\n                                    <Link className=\"btn btn-raised btn-info mr-3\"\r\n                                        to={`/post/create`}\r\n                                    >\r\n                                        Create Post\r\n                                    </Link>\r\n                                    <Link className=\"btn btn-raised btn-success mr-3\"\r\n                                        to={`/user/edit/${userProfile._id}`}\r\n                                    >\r\n                                        Edit Profile\r\n                                    </Link>\r\n                                    <button className=\"btn btn-raised btn-danger\" data-toggle=\"modal\" data-target={`#profile${user._id}`}>Delete </button>\r\n                                    <Modal text=\"profile\" modelId={`profile${user._id}`} deleteHandler={() => {\r\n                                        deleteProfile(user._id, localStorage.jwt, (err) => {\r\n                                            if (err) {\r\n                                                console.log(err)\r\n                                            }\r\n                                            else {\r\n                                                history.push('/signin')\r\n                                            }\r\n                                        })\r\n                                    }} />\r\n                                </div>\r\n                            ) : <ProfileFollowButton followingList={user ? user.following : []} followingId={userProfile._id} />}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 my-5\">\r\n                            <hr />\r\n                            <div className=\"lead\">{userProfile.about}</div>\r\n                            <hr />\r\n                            <ProfileTabs posts={postbyUserList} follower={userProfile.follower} following={userProfile.following} />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToPtops = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        users: state.auth.userList,\r\n        user: state.auth.user,\r\n        userProfile: state.auth.userProfile,\r\n        postbyUserList: state.post.postbyUser,\r\n        totalLikes: state.auth.totalLikes,\r\n        totalComments: state.auth.totalComments,\r\n        likesreceive: state.auth.likesreceive,\r\n        commentsreceive: state.auth.commentsreceive\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToPtops, { singleUser, deleteProfile, postByUser, likesAndcomments, likesReceive })(Profile);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { allUser } from '../../../store/actions/user';\r\nimport Spinner from '../../Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport { getRandomColor } from '../../helper';\r\n\r\nconst Users = ({ allUser, users, socket }) => {\r\n    const [err, setErr] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    const [socketConnected, setSocketConnected] = useState(false);\r\n    const [dt, setDt] = useState('');\r\n    useEffect(() => {\r\n        allUser((err) => {\r\n            if (err) {\r\n                setLoading(false)\r\n                setErr(err);\r\n            } else {\r\n                setLoading(false)\r\n            }\r\n        })\r\n    }, [allUser])\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.emit('neweve', \"neweve called\");\r\n            socket.on(\"hi\", (data) => {\r\n                console.log(\"data=>\", data)\r\n            })\r\n            socket.on(\"postall\", data => {\r\n                console.log(\"asd=>\",data)\r\n                setDt(data.some)\r\n            });\r\n            // socket.on(\"getData1\", data => {\r\n            //     setDt(data);\r\n            // });\r\n        }\r\n    }, [socket])\r\n\r\n\r\n\r\n    const imgError = async (evt) => {\r\n        // evt.target.src = \"https://source.unsplash.com/random\";\r\n        evt.target.style.backgroundColor = getRandomColor()\r\n        evt.target.style.overflow = \"hidden\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <h2 className=\"my-5 text-center\">\r\n                Users\r\n            </h2>\r\n            {err && <div className=\"alert alert-warning\">{err}</div>}\r\n            {users && (\r\n                <div className=\"row no-gutters justify-content-center\">\r\n                    {users.map(user => {\r\n                        return (\r\n                            <div className=\"col-sm-12 col-md-3 card m-1 singlePost\" style={{ width: \"18rem\" }} key={`Users ${user._id}`}>\r\n                                <img className=\"card-image-top \"\r\n                                    src={`/api/user/photo/${user._id}`}\r\n                                    onError={imgError}\r\n                                    alt={`${user.name}'s Image`} />\r\n                                <div className=\"card-body\">\r\n                                    <h2 className=\"card-title\">{user.name}</h2>\r\n                                    <p className=\"card-text\">{user.email} </p>\r\n                                    <Link to={`/user/${user._id}`} className=\"btn btn-raised btn-sm btn-primary\">View Profile </Link>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )}\r\n            {loading && <Spinner />}\r\n\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.auth.userList,\r\n        socket: state.socket\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { allUser })(Users);","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { editProfile } from \"../../../store/actions/user\";\r\n\r\nlet userData = new FormData();\r\nconst EditProfile = ({ isAuthenticated, user, editProfile }) => {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        about:\"\"\r\n    });\r\n    const [show, setShow] = useState(false);\r\n    const [err, setErr] = useState(\"\");\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            const { name, email,about } = user;\r\n            setValues({ ...values, name, email,about });\r\n        }\r\n    }, [isAuthenticated]);\r\n    const handleChange = (evt) => {\r\n        userData.set([evt.target.name], evt.target.value);\r\n        setValues({ ...values, [evt.target.name]: evt.target.value });\r\n    };\r\n    const handleFileChange = (evt) => {\r\n        userData.set([evt.target.name], evt.target.files[0]);\r\n        if (evt.target.files[0].size > 1048575) {\r\n            setErr(\"file must not grather than 1 mb\");\r\n            setShow(true);\r\n            setTimeout(() => {\r\n                setErr(\"\");\r\n                setShow(false);\r\n            }, 2000);\r\n        }\r\n        setValues({ ...values, [evt.target.name]: evt.target.files[0] });\r\n    };\r\n    const submitHandler = (evt) => {\r\n        const { name, email, password,about } = values;\r\n        evt.preventDefault();\r\n        if (password && password.length >= 1 && password.length <= 5) {\r\n            setErr(\"password must be greater than 6 character\");\r\n            setShow(true);\r\n            setTimeout(() => {\r\n                setErr(\"\");\r\n                setShow(false);\r\n            }, 2000);\r\n        }\r\n        if (!name || !email) {\r\n            setErr(\"name and email must required to perform this actions\");\r\n            setShow(true);\r\n            setTimeout(() => {\r\n                setErr(\"\");\r\n                setShow(false);\r\n            }, 2000);\r\n        } else {\r\n            editProfile(user._id, userData, localStorage.jwt, (err) => {\r\n                if (err) {\r\n                    setErr(err);\r\n                    setShow(true);\r\n                    setTimeout(() => {\r\n                        setErr(\"\");\r\n                        setShow(false);\r\n                    }, 2000);\r\n                } else {\r\n                    setShow(true);\r\n                    setTimeout(() => {\r\n                        setErr(\"\");\r\n                        setShow(false);\r\n                    }, 2000);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    const { name, email, password,about } = values;\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"mt-5 mb-5\"> EditProfile </h2>{\" \"}\r\n            {show ? (\r\n                <div\r\n                    class={`alert ${\r\n                        err ? \"alert-danger\" : \"alert-success\"\r\n                        } alert-dismissible fade show`}\r\n                    role=\"alert\"\r\n                >\r\n                    {\" \"}\r\n                    {err ? err : \"updated successfully\"}{\" \"}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                    >\r\n                        <span aria-hidden=\"true\"> & times; </span>{\" \"}\r\n                    </button>{\" \"}\r\n                </div>\r\n            ) : null}\r\n            <img className=\"img-thumbnail\" style={{\r\n                width: \"200\",\r\n                height: \"20vw\",\r\n                objectFit: \"cover\"\r\n            }}\r\n                src={`/api/user/photo/${user._id}?${new Date().getTime()}`} alt={`${user.name}'s Image`} />\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">profile Photo </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleFileChange}\r\n                        name=\"photo\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Name </label>{\" \"}\r\n                    <input\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        name=\"name\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        name=\"email\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Password </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                        name=\"password\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <div className=\"form-group\">\r\n                        <label className=\"text-muted\">About </label>{\" \"}\r\n                        <textarea\r\n                            type=\"text\"\r\n                            value={about}\r\n                            onChange={handleChange}\r\n                            name=\"about\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n                </div>{\" \"}\r\n                <button className={`btn btn-raised btn-primary`} disabled={show}>\r\n                    {\" \"}\r\n                    {show ? \"Updating Profile\" : \"Update Profile\"}{\" \"}\r\n                </button>{\" \"}\r\n            </form>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        user: state.auth.user,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, { editProfile })(EditProfile);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={(props) => {\r\n            switch (isAuthenticated) {\r\n                case null:\r\n                    return (\r\n                        <div>\r\n                            <h1 className=\"mt-5 mb-5\">Loading</h1>\r\n                        </div>\r\n                    )\r\n                case false:\r\n                    return <Redirect to=\"/signin\" />\r\n                default:\r\n                    return <Component {...props} />\r\n            }\r\n        }} />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { findPeople, singleUser } from '../../../store/actions/user';\r\nimport Spinner from '../../Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileFollowButton from './followProfileButton';\r\nimport { getRandomColor } from '../../helper';\r\n\r\nconst FindUser = ({ findPeople, users,authuser }) => {\r\n    const [err, setErr] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        findPeople(localStorage.jwt, (err) => {\r\n            if (err) {\r\n                setLoading(false)\r\n                setErr(err);\r\n            } else {\r\n                setLoading(false)\r\n            }\r\n        })\r\n    }, [localStorage.jwt])\r\n\r\n    const imgError = async (evt) => {\r\n        // evt.target.src = \"https://source.unsplash.com/random\";\r\n        evt.target.style.backgroundColor = getRandomColor()\r\n        evt.target.style.overflow=\"hidden\"\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <h2 className=\"my-5 text-center\">\r\n                Find People\r\n            </h2>\r\n            {err && <div className=\"alert alert-warning\">{err}</div>}\r\n            {users && (\r\n                <div className=\"row no-gutters justify-content-center\">\r\n                    {users.map(user => {\r\n                        return (\r\n                            <div className=\"col-md-3 card m-1\" style={{ width: \"18rem\" }} key={`Users ${user._id}`}>\r\n                                <div className=\"card-body\">\r\n                                    <h2 className=\"card-title\">{user.name}</h2>\r\n                                    <p className=\"card-text\">{user.email} </p>\r\n                                    <Link to={`/user/${user._id}`} className=\"btn btn-raised btn-sm btn-primary\">View Profile </Link>\r\n                                    <ProfileFollowButton extraclass=\"ml-1\" followingList={authuser ? authuser.following : []} followingId={user._id} />\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )}\r\n            {loading && <Spinner />}\r\n\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.auth.findPeople,\r\n        authuser: state.auth.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { findPeople })(FindUser);","import Editor from 'react-quill';\r\nimport React from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nclass MyComponent extends React.Component {\r\n    state = {\r\n        text: ''\r\n    }\r\n\r\n    // constructor(props) {\r\n    //   super(props)\r\n    //   this.state = { text: '' } // You can also pass a Quill Delta here\r\n    //   this.handleChange = this.handleChange.bind(this)\r\n    // }\r\n\r\n    handleChange = (value) => {\r\n        this.setState({ text: value })\r\n    }\r\n\r\n    render() {\r\n        Editor.modules = {\r\n            toolbar: [\r\n                [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\r\n                [{ size: [] }],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ 'list': 'ordered' }, { 'list': 'bullet' },\r\n                { 'indent': '-1' }, { 'indent': '+1' }],\r\n                ['clean']\r\n            ],\r\n            clipboard: {\r\n                // toggle to add extra line breaks when pasting HTML:\r\n                matchVisual: false,\r\n            }\r\n        }\r\n        /* \r\n         * Quill editor formats\r\n         * See https://quilljs.com/docs/formats/\r\n         */\r\n        Editor.formats = [\r\n            'header', 'font', 'size',\r\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'list', 'bullet', 'indent',\r\n            'link'\r\n        ]\r\n\r\n        return (\r\n            <Editor\r\n                value={this.props.value}\r\n                name={this.props.name}\r\n                onChange={this.props.onChange}\r\n                modules={Editor.modules}\r\n                formats={Editor.formats}\r\n                theme=\"snow\"\r\n                placeholder=\"write something\"\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default MyComponent;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost, singlePost, updatePost } from \"../../../store/actions/post\";\r\nimport Editor from './Editor';\r\nlet postData = new FormData();\r\nconst CreatePost = ({ isAuthenticated, match, user, createPost, history, singlePost, updatePost }) => {\r\n    const [values, setValues] = useState({\r\n        title: \"\",\r\n        body: \"\",\r\n        photo: \"\"\r\n    });\r\n    const [show, setShow] = useState(false);\r\n    const [err, setErr] = useState(\"\");\r\n    useEffect(() => {\r\n        if (match.params.postId) {\r\n            singlePost(match.params.postId, (err, data) => {\r\n                if (err) {\r\n                    setErr(err);\r\n                } else {\r\n                    setValues({ ...values, ...data })\r\n                }\r\n            })\r\n\r\n        }\r\n    }, [isAuthenticated, match.params.postId, singlePost]);\r\n    const handleChange = (evt) => {\r\n        postData.set([evt.target.name], evt.target.value);\r\n        setValues({ ...values, [evt.target.name]: evt.target.value });\r\n    };\r\n    const bodyChange = (text) => {\r\n        postData.set(\"body\", text);\r\n        setValues({\r\n            ...values,\r\n            body: text\r\n        })\r\n    }\r\n    const handleFileChange = (evt) => {\r\n        postData.set([evt.target.name], evt.target.files[0]);\r\n        if (evt.target.files[0].size > 1048575) {\r\n            setErr(\"file must not grather than 1 mb\");\r\n            setShow(true);\r\n            setTimeout(() => {\r\n                setErr(\"\");\r\n                setShow(false);\r\n            }, 2000);\r\n        }\r\n        setValues({ ...values, [evt.target.name]: evt.target.files[0] });\r\n    };\r\n    const submitHandler = (evt) => {\r\n        const { title, body } = values;\r\n        evt.preventDefault();\r\n        if (!title || !body) {\r\n            setErr(\"please fill all field\");\r\n            setShow(true);\r\n            setTimeout(() => {\r\n                setErr(\"\");\r\n                setShow(false);\r\n            }, 2000);\r\n        }\r\n        else {\r\n            if (match.params.postId) {\r\n                postData._id = values._id\r\n                updatePost(postData, localStorage.jwt, (err) => {\r\n                    if (err) {\r\n                        setErr(err);\r\n                        setShow(true);\r\n                        setTimeout(() => {\r\n                            setErr(\"\");\r\n                            setShow(false);\r\n                        }, 2000);\r\n                    } else {\r\n                        setShow(true);\r\n                        setTimeout(() => {\r\n                            setErr(\"\");\r\n                            setShow(false);\r\n                        }, 2000);\r\n                    }\r\n                });\r\n            } else {\r\n                createPost(postData, localStorage.jwt, (err) => {\r\n                    if (err) {\r\n                        setErr(err);\r\n                        setShow(true);\r\n                        setTimeout(() => {\r\n                            setErr(\"\");\r\n                            setShow(false);\r\n                        }, 2000);\r\n                    } else {\r\n                        setShow(true);\r\n                        history.push(`/user/${user._id}`)\r\n                        setValues({});\r\n                        setTimeout(() => {\r\n                            setErr(\"\");\r\n                            setShow(false);\r\n                        }, 2000);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n    const { title, body } = values;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2 className=\"mt-5 mb-5\"> {match.params.postId ? \"Update\" : \"Create\"} New Post </h2>{\" \"}\r\n            {show ? (\r\n                <div\r\n                    className={`alert ${\r\n                        err ? \"alert-danger\" : \"alert-success\"\r\n                        } alert-dismissible fade show`}\r\n                    role=\"alert\"\r\n                >\r\n                    {\" \"}\r\n                    {err ? err : \"updated successfully\"}{\" \"}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"close\"\r\n                        data-dismiss=\"alert\"\r\n                        aria-label=\"Close\"\r\n                    >\r\n                        <span aria-hidden=\"true\"> &times; </span>{\" \"}\r\n                    </button>{\" \"}\r\n                </div>\r\n            ) : null}\r\n            <img className=\"img-thumbnail\" style={{\r\n                width: \"200\",\r\n                height: \"20vw\",\r\n                objectFit: \"cover\"\r\n            }}\r\n                src={`/api/post/photo/${values._id}`} alt={`${title}'s Image`} />\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">profile Photo </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={handleFileChange}\r\n                        name=\"photo\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">Title </label>{\" \"}\r\n                    <input\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={handleChange}\r\n                        name=\"title\"\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"text-muted\">body</label>\r\n                    <Editor name=\"body\" value={body} onChange={bodyChange} className=\"form-control\" />\r\n                </div>\r\n\r\n                <button className={`btn btn-raised btn-primary`} disabled={show}>\r\n                    {\" \"}\r\n                    {match.params.postId ? \"Update\" : \"create \"} post{\" \"}\r\n                </button>{\" \"}\r\n            </form>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        user: state.auth.user,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, { createPost, singlePost, updatePost })(CreatePost);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { getRandomColor } from '../../helper';\r\nclass Comment extends React.Component {\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.comment._id!==this.props.comment._id){\r\n            console.log(\"comment updated \")\r\n        }\r\n    }\r\n    \r\n    imgError = async (evt) => {\r\n        // evt.target.src = \"https://source.unsplash.com/random\";\r\n        evt.target.style.backgroundColor = getRandomColor()\r\n        evt.target.style.overflow = \"hidden\"\r\n    }\r\n    render() {\r\n        const { comment, user, isAuthenticated } = this.props\r\n        return (\r\n            <div key={`tabfollower${comment._id}`}>\r\n                <div className=\"row mt-2 p-2\">\r\n                    <div className=\"col-12\">\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <div class=\"media\">\r\n                                <Link to={`/user/${comment.commentedBy._id}`} title={comment.commentedBy.name}>\r\n                                    <img\r\n                                        src={`http://localhost:8080/api/user/photo/${comment.commentedBy._id}?${new Date().getTime()}`} class=\"mr-3\" onError={this.imgError} />\r\n\r\n                                </Link>\r\n\r\n                                <div class=\"media-body\">\r\n                                    <h5 style={{ lineHeight: \".5\" }} class=\"mt-0\"><Link to={`/user/${comment.commentedBy._id}`} title={comment.commentedBy.name}>{comment.commentedBy.name}</Link>  <span className=\"ml-2\" >{moment(comment.createdAt).calendar()}</span> </h5>\r\n                                    <p>\r\n                                        {comment.text}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                isAuthenticated\r\n                                &&\r\n                                comment.commentedBy._id === user._id\r\n                                &&\r\n                                <button type=\"button\" onClick={() => this.deleteComment(comment._id)} className=\"btn  btn-danger\">delete</button>\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Comment;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\n\r\nimport { comment, unComment } from \"../../../store/actions/post\";\r\nimport SingleComment from \"./commentRender\";\r\nclass Comment extends React.Component {\r\n    state = {\r\n        text: \"\"\r\n    }\r\n    commentRef = React.createRef();\r\n\r\n    componentDidUpdate(prevprops) {\r\n        if (prevprops.comments.length !== this.props.comments.length) {\r\n            console.log(\"updated\");\r\n        }\r\n    }\r\n    submitHandler = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        const { postId } = this.props;\r\n        const { isAuthenticated } = this.props;\r\n        const text = this.commentRef.current.value\r\n        if (text.length && isAuthenticated) {\r\n            this.props.comment(postId, { text }, localStorage.jwt, (err) => {\r\n                if (!err) {\r\n                    this.setState({ text: \"\" })\r\n                    this.props.socket.emit(\"postUpdate\", postId)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    deleteComment = (commentId) => {\r\n        const { postId } = this.props;\r\n\r\n        unComment(postId, commentId, localStorage.jwt, (err) => {\r\n            if (err) {\r\n                console.log(\"comment not deleted\");\r\n            }\r\n            else {\r\n                this.props.socket.emit(\"postUpdate\", postId)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { comment, comments, isAuthenticated, user } = this.props;\r\n        if (!comment) {\r\n            return <div>Loading</div>\r\n        }\r\n        else {\r\n            const newComments = _.sortBy(comments, [function (o) { return o.createdAt; }]).reverse();\r\n            return (\r\n                <div className=\"col-12 p-0\">\r\n                    <h2 className=\"my-5\">\r\n                        Leave a comment\r\n                    </h2>\r\n                    <form onSubmit={this.submitHandler} >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                placeholder=\"Write comment\"\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                ref={this.commentRef}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-raised btn-success \">post</button>\r\n                    </form>\r\n                    <hr />\r\n                    <div className=\"col-12\">\r\n                        <h2> ({comments.length}) Comments </h2>\r\n                        {newComments.map(comment => (\r\n                            <SingleComment isAuthenticated={isAuthenticated} user={user} comment={comment} />\r\n                        ))}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        user: state.auth.user,\r\n        socket: state.socket\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { comment, unComment })(Comment);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { singlePost, deletePost, likeUnlike, postUpdate } from \"../../../store/actions/post\"\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from \"../../Modal\";\r\nimport Comments from \"./Comment\"\r\n\r\n\r\nclass SinglePost extends React.Component {\r\n    state = {\r\n        isLike: false\r\n    }\r\n    componentDidMount() {\r\n        this.props.singlePost(this.props.match.params.postId, (err) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n\r\n            }\r\n        })\r\n        this.SockerHandler()\r\n\r\n\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.socket !== prevProps.socket) {\r\n            this.SockerHandler()\r\n        }\r\n    }\r\n    SockerHandler = () => {\r\n        const socket = this.props.socket;\r\n        if (socket) {\r\n            console.log(\"socket connected\")\r\n            socket.on('post', post => {\r\n                this.props.postUpdate(post)\r\n            })\r\n        }\r\n    }\r\n    likeToggle = () => {\r\n        this.props.likeUnlike(this.props.post._id, localStorage.jwt, (err) => {\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n                this.props.socket.emit(\"postUpdate\", this.props.post._id)\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { post, isAuthenticated, user, history } = this.props;\r\n        switch (post) {\r\n            case null:\r\n                return (\r\n                    <div className=\"text-center\">Loading</div>\r\n                )\r\n            default:\r\n                let isLike = false\r\n                if (isAuthenticated && post && user) {\r\n                    isLike = post.likes.find(like => like === user._id)\r\n                }\r\n\r\n                return (\r\n                    <div className=\"container-fluid\" style={{ width: \"90%\" }}>\r\n                        <h2 className=\"display-2 my-4\"> {post.title}</h2>\r\n                        <div className=\"col-md-12 card m-1 p-1\">\r\n                            <img className=\"card-image-top\" style={{\r\n                                width: \"100%\",\r\n                                height: \"400px\",\r\n                                objectFit: \"contain\"\r\n                            }}\r\n                                src={`/api/post/photo/${post._id}`}\r\n                                // onError={imgError}\r\n                                alt={`${post.name}'s Image`} />\r\n                            <div className=\"card-body p-2\">\r\n                                <div className=\"card-text\" dangerouslySetInnerHTML={{ __html: post.body }} />\r\n                                <hr />\r\n                                <p className=\"font-italic \">\r\n                                    Posted By\r\n                                            <Link to={`/user/${post.postedBy._id}`}>\r\n                                        <span className=\"mark\">\r\n                                            {post.postedBy.name}\r\n                                        </span>\r\n                                    </Link>\r\n                                    <br />\r\n                                    {/* on {new Date(post.createdAt).toDateString()} */}\r\n                                            on {moment(post.createdAt).format('lll')}\r\n                                </p>\r\n                                <h6 style={{ cursor: \"pointer\" }} className=\"d-inline-block\" onClick={this.likeToggle}  >\r\n                                    {post.likes.length}{\" \"}\r\n                                    {!isLike ? <i className=\"fa fa-thumbs-o-up ml-1 \" aria-hidden=\"true\"></i> :\r\n                                        <i className=\"fa fa-thumbs-up text-primary ml-1\" aria-hidden=\"true\"></i>\r\n                                    }\r\n                                </h6>\r\n                                <h6 style={{ cursor: \"pointer\" }} className=\"d-inline-block ml-3\" >\r\n                                    {post.comments.length}\r\n                                    <i className=\"fa fa-comments-o ml-1\" aria-hidden=\"true\"></i>\r\n                                </h6>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {isAuthenticated && user._id === post.postedBy._id && (\r\n                            <div className=\"d-inline-block my-4 float-right\">\r\n                                <Link className=\"btn btn-raised btn-info mr-3\"\r\n                                    to={`/post/edit/${post._id}`}\r\n                                >\r\n                                    Edit Post\r\n                                </Link>\r\n                                <button className=\"btn btn-raised btn-danger\" data-toggle=\"modal\" data-target={`#post${post._id}`}>Delete Post</button>\r\n                                <Modal text=\"profile\" modelId={`post${post._id}`} deleteHandler={() => {\r\n                                    this.props.deletePost(post._id, localStorage.jwt, (err) => {\r\n                                        if (err) {\r\n                                            console.log(err)\r\n                                        }\r\n                                        else {\r\n\r\n                                            history.push('/')\r\n                                        }\r\n                                    })\r\n                                }} />\r\n                            </div>\r\n                        )}\r\n                        <div className=\"row\">\r\n                            <Comments postId={post._id} comments={post.comments} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        post: state.post.post,\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        user: state.auth.user,\r\n        socket: state.socket\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { singlePost, likeUnlike, deletePost, postUpdate })(SinglePost);","import React, { useEffect } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Home from './components/pages/Home';\r\nimport SignUp from './components/pages/user/Signup';\r\nimport Signin from './components/pages/user/Signin';\r\nimport Menu from './components/menu';\r\nimport Profile from './components/pages/user/Profile';\r\nimport Users from './components/pages/user/Users';\r\nimport EditProfile from './components/pages/user/EditProfile';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport FindPeople from './components/pages/user/FindUser';\r\nimport CreatePost from './components/pages/post/createPost';\r\nimport SinglePost from './components/pages/post/SinglePost';\r\nconst MainRouter = () => {\r\n    useEffect(() => {\r\n\r\n    })\r\n    return (\r\n        <div>\r\n            <Menu />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/users\" component={Users} />\r\n                <Route exact path=\"/signup\" component={SignUp} />\r\n                <Route exact path=\"/signin\" component={Signin} />\r\n                <Route exact path=\"/user/:userId\" component={Profile} />\r\n                <PrivateRoute exact path=\"/user/edit/:userId\" component={EditProfile} />\r\n                <PrivateRoute exact path=\"/findpeople\" component={FindPeople} />\r\n                <PrivateRoute exact path=\"/post/create\" component={CreatePost} />\r\n                <PrivateRoute exact path=\"/post/edit/:postId\" component={CreatePost} />\r\n                <Route exact path=\"/posts/:postId\" component={SinglePost} />\r\n                <Redirect to=\"/\" />\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\nexport default MainRouter;","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport { logedIn, notLogedIn } from './store/actions/user';\r\nimport MainRouter from './MainRouter'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { connectSocket } from \"./store/actions/socketAction\";\r\nimport io from \"socket.io-client\";\r\nrequire('dotenv').config();\r\nconst App = (props) => {\r\n  // const [socket, setSocket] = useState(null);\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [dt, setDt] = useState('');\r\n  useEffect(() => {\r\n    if (localStorage.jwt) {\r\n      props.logedIn(localStorage.jwt);\r\n    }\r\n    else {\r\n      props.notLogedIn();\r\n    }\r\n    props.connectSocket(io('http://localhost:8080'));\r\n\r\n  }, []);\r\n  return (\r\n    <Router>\r\n\r\n      <MainRouter />\r\n    </Router>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    socket: state.socket\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { logedIn, notLogedIn, connectSocket })(App);\r\n","import { SOCKETCONNECTED, DISSOCKETCONNECTED } from \"./types\";\r\n// import io from \"socket.io-client\";\r\n\r\nexport const connectSocket = (socket) => {\r\n    return {\r\n        type: SOCKETCONNECTED,\r\n        payload: socket\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    SIGNUP, SIGNIN,\r\n    SET_USER, LOGOUT,\r\n    AUTH_ERROR, ALL_USER,\r\n    SINGLE_USER, DELETE_PROFILE,\r\n    UPDATE_PROFILE,\r\n    NOT_LOGED_IN,\r\n    FOLLOW, UNFOLLOW,\r\n    FINDPEOPLE,\r\n    LIKESANDCOMMENTS,\r\n    LIKERECEIVE\r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    user: null,\r\n    isAuthenticated: null,\r\n    token: null,\r\n    userList: null,\r\n    userProfile: null,\r\n    findPeople: null,\r\n    totalLikes: 0,\r\n    totalComments: 0,\r\n    likesReceive: 0,\r\n    commentsReceive: 0\r\n}\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LIKERECEIVE:\r\n            return {\r\n                ...state,\r\n                commentsreceive: action.payload.comments_receive,\r\n                likesreceive: action.payload.likes_receive\r\n\r\n            }\r\n        case LIKESANDCOMMENTS:\r\n            return {\r\n                ...state,\r\n                totalLikes: action.payload.likes_post,\r\n                totalComments: action.payload.comments_post\r\n            }\r\n        case SIGNUP:\r\n        case SIGNIN:\r\n            return {\r\n                ...state,\r\n                token: action.payload.token,\r\n                isAuthenticated: true,\r\n                user: action.payload.user\r\n            }\r\n\r\n        case SET_USER:\r\n        case UNFOLLOW:\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isAuthenticated: true,\r\n            }\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n\r\n            }\r\n        case AUTH_ERROR:\r\n        case NOT_LOGED_IN:\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                token: null\r\n            }\r\n        case ALL_USER:\r\n            return {\r\n                ...state,\r\n                userList: action.payload\r\n            }\r\n        case SINGLE_USER:\r\n            return {\r\n                ...state,\r\n                userProfile: action.payload\r\n            }\r\n        case DELETE_PROFILE:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                token: null,\r\n                userProfile: null\r\n\r\n            }\r\n        case FINDPEOPLE:\r\n            return {\r\n                ...state,\r\n                findPeople: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { GETALLPOST, SINGLEPOST, POSTBY_USER, LIKE_UNLIKE, COMMENT, UNCOMMENT } from '../actions/types';\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    postbyUser: []\r\n}\r\nconst postReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GETALLPOST:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            };\r\n        case SINGLEPOST:\r\n            return {\r\n                ...state,\r\n                post: action.payload\r\n            }\r\n        case POSTBY_USER:\r\n            return {\r\n                ...state,\r\n                postbyUser: action.payload\r\n            }\r\n        case LIKE_UNLIKE:\r\n        case UNCOMMENT:\r\n        case COMMENT:\r\n            return {\r\n                ...state,\r\n                post: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default postReducer;","import { SOCKETCONNECTED } from \"../actions/types\";\r\n\r\nconst initialState = null\r\n\r\nconst Socket = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SOCKETCONNECTED:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default Socket;","import { combineReducers } from 'redux'\r\nimport user from './user';\r\nimport post from './post';\r\nimport socket from \"./socketReducer\";\r\nexport default combineReducers({\r\n    auth: user,\r\n    post,\r\n    socket\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore,compose } from 'redux';\nimport { applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}